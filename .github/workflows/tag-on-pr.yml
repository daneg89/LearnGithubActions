# Checks a given change on branch and creates a new tag with name related to the env
# Has some bugs but is just a POC

on:
  push:
    branches:
      - main
      - staging
      - production

name: Tag build with appropriate version on PR merge

jobs:
  tag-dev:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Create tag for dev
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # depth 0 will get us all the tags to refer to
          fetch-depth: 0
          ref: 'main'

      - name: Tag main
        run: |
          # Naive command, expects at least one existing tag beforehand
          # Also does not properly iterate version number between environments
          VERSION=0.`git describe --tags --abbrev=0 | awk -F. -v OFS=. '{print $NF+1}'`

          # Git command will fail without name/email for this
          git config --global user.email "auto-tagger@learningGHActions.com"
          git config --global user.name "Auto Tagger"

          git tag -a dev-${VERSION} -m "tagged release automagically"
          git push origin dev-${VERSION}
  tag-staging:
    if: ${{ github.ref == 'refs/heads/staging' }}
    name: Create tag for staging
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: 'staging'

      - name: Tag staging
        run: |
          # Naive command, expects at least one existing tag beforehand
          VERSION=0.`git describe --tags --abbrev=0 | awk -F. -v OFS=. '{print $NF+1}'`

          # Git command will fail without name/email for this
          git config --global user.email "auto-tagger@learningGHActions.com"
          git config --global user.name "Auto Tagger"

          git tag -a staging-${VERSION} -m "tagged release automagically"
          git push origin staging-${VERSION}
  tag-production:
    if: ${{ github.ref == 'refs/heads/production' }}
    name: Create tag for production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: 'production'

      - name: Tag production
        run: |
          # Naive command, expects at least one existing tag beforehand
          VERSION=0.`git describe --tags --abbrev=0 | awk -F. -v OFS=. '{print $NF+1}'`

          # Git command will fail without name/email for this
          git config --global user.email "auto-tagger@learningGHActions.com"
          git config --global user.name "Auto Tagger"

          git tag -a production-${VERSION} -m "tagged release automagically"
          git push origin production-${VERSION}


